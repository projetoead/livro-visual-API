{"version":3,"sources":["./node_modules/ngx-quill/fesm2015/ngx-quill.js","./src/app/pages/atividades/nova-atividade/nova-atividade.page.html","./src/app/pages/atividades/nova-atividade/nova-atividade.module.ts","./src/app/pages/atividades/nova-atividade/nova-atividade.page.scss","./src/app/pages/atividades/nova-atividade/nova-atividade.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACmB;AAC0H;AAC5I;AACS;;AAElE;AACA;AACA;AACA;AACA,UAAU,YAAY,GAAG,YAAY;AACrC,UAAU,kBAAkB,GAAG,iBAAiB;AAChD,UAAU,gBAAgB,GAAG,kBAAkB;AAC/C,UAAU,eAAe,GAAG,eAAe;AAC3C,UAAU,mBAAmB;AAC7B,UAAU,0CAA0C;AACpD,UAAU,oCAAoC;AAC9C;AACA,aAAa,YAAY;AACzB,aAAa;AACb;AACA,UAAU,WAAW;AACrB,UAAU,YAAY;AACtB;AACA;AACA;AACA;;AAEA,+BAA+B,4DAAc;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C,mCAAmC,0DAAY;AAC/C,oCAAoC,0DAAY;AAChD,sCAAsC,0DAAY;AAClD,2BAA2B,0DAAY;AACvC,0BAA0B,0DAAY;AACtC,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,6DAAe;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gCAAgC;AAChC;AACA,sBAAsB;AACtB;AACA,YAAY,wEAAgB;AAC5B;AACA;AACA;AACA,oBAAoB,mBAAO,CAAC,iDAAO;AACnC;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,6DAAe;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,gDAAgD,wDAAU;AAC1D,IAAI,+DAAS;AACb,uBAAuB,+DAAiB;AACxC;AACA;AACA;AACA,yBAAyB,gEAAiB;AAC1C,6BAA6B,gEAAU;AACvC,aAAa;AACb;AACA;AACA,yBAAyB,4DAAa;AACtC,6BAA6B,gEAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,qDAAO,IAAI,4DAAM,CAAC,wDAAQ;AAC9B,IAAI,qDAAO,IAAI,4DAAM,CAAC,yDAAW;AACjC,IAAI,qDAAO,IAAI,4DAAM;AACrB,IAAI,wDAAU,uBAAuB,wDAAU;AAC/C,QAAQ,sEAAY;AACpB,QAAQ,uDAAS;AACjB,QAAQ,oDAAM;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,MAAM;AAC1C;AACA;AACA;AACA,oCAAoC,MAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,yBAAyB,wDAAU;AACnC,IAAI,+DAAS;AACb,uBAAuB,+DAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,qDAAO,IAAI,4DAAM;AACrB,IAAI,wDAAU,uBAAuB,sEAAY;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wEAAgB;AAC5B;AACA;AACA;AACA,sBAAsB,mBAAO,CAAC,iDAAO;AACrC;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,qBAAqB,wDAAU;AAC/B,IAAI,+DAAS;AACb,uBAAuB,+DAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,qDAAO,IAAI,4DAAM,CAAC,y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","file":"pages-atividades-nova-atividade-nova-atividade-module-es2015.js","sourcesContent":["import { __decorate, __metadata, __param } from 'tslib';\nimport { isPlatformServer, DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, EventEmitter, SecurityContext, Input, Output, Component, ViewEncapsulation, forwardRef, Inject, PLATFORM_ID, ElementRef, Renderer2, NgZone, NgModule } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nconst defaultModules = {\n    toolbar: [\n        ['bold', 'italic', 'underline', 'strike'],\n        ['blockquote', 'code-block'],\n        [{ header: 1 }, { header: 2 }],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        [{ script: 'sub' }, { script: 'super' }],\n        [{ indent: '-1' }, { indent: '+1' }],\n        [{ direction: 'rtl' }],\n        [{ size: ['small', false, 'large', 'huge'] }],\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\n        [\n            { color: [] },\n            { background: [] }\n        ],\n        [{ font: [] }],\n        [{ align: [] }],\n        ['clean'],\n        ['link', 'image', 'video'] // link and image, video\n    ]\n};\n\nconst QUILL_CONFIG_TOKEN = new InjectionToken('config');\n\nvar QuillEditorComponent_1;\n// tslint:disable-next-line:variable-name\nlet Quill = null;\nconst getFormat = (format, configFormat) => {\n    const passedFormat = format || configFormat;\n    return passedFormat || 'html';\n};\nconst ɵ0 = getFormat;\nlet QuillEditorComponent = QuillEditorComponent_1 = class QuillEditorComponent {\n    constructor(elementRef, domSanitizer, doc, \n    // tslint:disable-next-line:ban-types\n    platformId, renderer, zone, config) {\n        this.elementRef = elementRef;\n        this.domSanitizer = domSanitizer;\n        this.doc = doc;\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.config = config;\n        this.required = false;\n        this.customToolbarPosition = 'top';\n        this.sanitize = false;\n        this.styles = null;\n        this.strict = true;\n        this.customOptions = [];\n        this.preserveWhitespace = false;\n        this.onEditorCreated = new EventEmitter();\n        this.onEditorChanged = new EventEmitter();\n        this.onContentChanged = new EventEmitter();\n        this.onSelectionChanged = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.disabled = false; // used to store initial value before ViewInit\n        this.valueGetter = (quillEditor, editorElement) => {\n            let html = editorElement.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br><div>') {\n                html = null;\n            }\n            let modelValue = html;\n            const format = getFormat(this.format, this.config.format);\n            if (format === 'text') {\n                modelValue = quillEditor.getText();\n            }\n            else if (format === 'object') {\n                modelValue = quillEditor.getContents();\n            }\n            else if (format === 'json') {\n                try {\n                    modelValue = JSON.stringify(quillEditor.getContents());\n                }\n                catch (e) {\n                    modelValue = quillEditor.getText();\n                }\n            }\n            return modelValue;\n        };\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.config.format);\n            if (format === 'html') {\n                if (this.sanitize) {\n                    value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                }\n                return quillEditor.clipboard.convert(value);\n            }\n            else if (format === 'json') {\n                try {\n                    return JSON.parse(value);\n                }\n                catch (e) {\n                    return [{ insert: value }];\n                }\n            }\n            return value;\n        };\n        this.selectionChangeHandler = (range, oldRange, source) => {\n            this.zone.run(() => {\n                if (range === null) {\n                    this.onBlur.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                else if (oldRange === null) {\n                    this.onFocus.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                this.onSelectionChanged.emit({\n                    editor: this.quillEditor,\n                    oldRange,\n                    range,\n                    source\n                });\n                if (!range && this.onModelTouched) {\n                    this.onModelTouched();\n                }\n            });\n        };\n        this.textChangeHandler = (delta, oldDelta, source) => {\n            // only emit changes emitted by user interactions\n            const text = this.quillEditor.getText();\n            const content = this.quillEditor.getContents();\n            let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br><div>') {\n                html = null;\n            }\n            this.zone.run(() => {\n                const trackChanges = this.trackChanges || this.config.trackChanges;\n                if ((source === Quill.sources.USER || trackChanges && trackChanges === 'all') && this.onModelChange) {\n                    this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n                }\n                this.onContentChanged.emit({\n                    content,\n                    delta,\n                    editor: this.quillEditor,\n                    html,\n                    oldDelta,\n                    source,\n                    text\n                });\n            });\n        };\n        this.editorChangeHandler = (event, current, old, source) => {\n            // only emit changes emitted by user interactions\n            if (event === 'text-change') {\n                const text = this.quillEditor.getText();\n                const content = this.quillEditor.getContents();\n                let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n                if (html === '<p><br></p>' || html === '<div><br><div>') {\n                    html = null;\n                }\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        content,\n                        delta: current,\n                        editor: this.quillEditor,\n                        event,\n                        html,\n                        oldDelta: old,\n                        source,\n                        text\n                    });\n                });\n            }\n            else {\n                this.onEditorChanged.emit({\n                    editor: this.quillEditor,\n                    event,\n                    oldRange: old,\n                    range: current,\n                    source\n                });\n            }\n        };\n    }\n    static normalizeClassNames(classes) {\n        const classList = classes.trim().split(' ');\n        return classList.reduce((prev, cur) => {\n            const trimmed = cur.trim();\n            if (trimmed) {\n                prev.push(trimmed);\n            }\n            return prev;\n        }, []);\n    }\n    // tslint:disable-next-line:no-empty\n    onModelChange(_modelValue) { }\n    // tslint:disable-next-line:no-empty\n    onModelTouched() { }\n    ngAfterViewInit() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        if (!Quill) {\n            Quill = require('quill');\n        }\n        this.elementRef.nativeElement.insertAdjacentHTML(this.customToolbarPosition === 'top' ? 'beforeend' : 'afterbegin', this.preserveWhitespace ? '<pre quill-editor-element></pre>' : '<div quill-editor-element></div>');\n        this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n        const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n        const modules = Object.assign({}, this.modules || (this.config.modules || defaultModules));\n        if (toolbarElem) {\n            modules.toolbar = toolbarElem;\n        }\n        else if (modules.toolbar === undefined) {\n            modules.toolbar = defaultModules.toolbar;\n        }\n        let placeholder = this.placeholder !== undefined ? this.placeholder : this.config.placeholder;\n        if (placeholder === undefined) {\n            placeholder = 'Insert text here ...';\n        }\n        if (this.styles) {\n            Object.keys(this.styles).forEach((key) => {\n                this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n            });\n        }\n        if (this.classes) {\n            this.addClasses(this.classes);\n        }\n        this.customOptions.forEach((customOption) => {\n            const newCustomOption = Quill.import(customOption.import);\n            newCustomOption.whitelist = customOption.whitelist;\n            Quill.register(newCustomOption, true);\n        });\n        let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n        if (!bounds) {\n            bounds = this.config.bounds ? this.config.bounds : this.doc.body;\n        }\n        let debug = this.debug;\n        if (!debug && debug !== false && this.config.debug) {\n            debug = this.config.debug;\n        }\n        let readOnly = this.readOnly;\n        if (!readOnly && this.readOnly !== false) {\n            readOnly = this.config.readOnly !== undefined ? this.config.readOnly : false;\n        }\n        let scrollingContainer = this.scrollingContainer;\n        if (!scrollingContainer && this.scrollingContainer !== null) {\n            scrollingContainer = this.config.scrollingContainer === null || this.config.scrollingContainer ? this.config.scrollingContainer : null;\n        }\n        let formats = this.formats;\n        if (!formats && formats === undefined) {\n            formats = this.config.formats ? Object.assign({}, this.config.formats) : (this.config.formats === null ? null : undefined);\n        }\n        this.quillEditor = new Quill(this.editorElem, {\n            bounds,\n            debug,\n            formats,\n            modules,\n            placeholder,\n            readOnly,\n            scrollingContainer,\n            strict: this.strict,\n            theme: this.theme || (this.config.theme ? this.config.theme : 'snow')\n        });\n        if (this.content) {\n            const format = getFormat(this.format, this.config.format);\n            if (format === 'object') {\n                this.quillEditor.setContents(this.content, 'silent');\n            }\n            else if (format === 'text') {\n                this.quillEditor.setText(this.content, 'silent');\n            }\n            else if (format === 'json') {\n                try {\n                    this.quillEditor.setContents(JSON.parse(this.content), 'silent');\n                }\n                catch (e) {\n                    this.quillEditor.setText(this.content, 'silent');\n                }\n            }\n            else {\n                if (this.sanitize) {\n                    this.content = this.domSanitizer.sanitize(SecurityContext.HTML, this.content);\n                }\n                const contents = this.quillEditor.clipboard.convert(this.content);\n                this.quillEditor.setContents(contents, 'silent');\n            }\n            this.quillEditor.history.clear();\n        }\n        // initialize disabled status based on this.disabled as default value\n        this.setDisabledState();\n        // triggered if selection or text changed\n        this.quillEditor.on('editor-change', this.editorChangeHandler);\n        // mark model as touched if editor lost focus\n        this.quillEditor.on('selection-change', this.selectionChangeHandler);\n        // update model if text changes\n        this.quillEditor.on('text-change', this.textChangeHandler);\n        // trigger created in a timeout to avoid changed models after checked\n        // if you are using the editor api in created output to change the editor content\n        setTimeout(() => this.onEditorCreated.emit(this.quillEditor));\n    }\n    ngOnDestroy() {\n        if (this.quillEditor) {\n            this.quillEditor.off('selection-change', this.selectionChangeHandler);\n            this.quillEditor.off('text-change', this.textChangeHandler);\n            this.quillEditor.off('editor-change', this.editorChangeHandler);\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        // tslint:disable:no-string-literal\n        if (changes['readOnly']) {\n            this.quillEditor.enable(!changes['readOnly'].currentValue);\n        }\n        if (changes['placeholder']) {\n            this.quillEditor.root.dataset.placeholder =\n                changes['placeholder'].currentValue;\n        }\n        if (changes['styles']) {\n            const currentStyling = changes['styles'].currentValue;\n            const previousStyling = changes['styles'].previousValue;\n            if (previousStyling) {\n                Object.keys(previousStyling).forEach((key) => {\n                    this.renderer.removeStyle(this.editorElem, key);\n                });\n            }\n            if (currentStyling) {\n                Object.keys(currentStyling).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n        }\n        if (changes['classes']) {\n            const currentClasses = changes['classes'].currentValue;\n            const previousClasses = changes['classes'].previousValue;\n            if (previousClasses) {\n                this.removeClasses(previousClasses);\n            }\n            if (currentClasses) {\n                this.addClasses(currentClasses);\n            }\n        }\n        // tslint:enable:no-string-literal\n    }\n    addClasses(classList) {\n        QuillEditorComponent_1.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.addClass(this.editorElem, c);\n        });\n    }\n    removeClasses(classList) {\n        QuillEditorComponent_1.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.removeClass(this.editorElem, c);\n        });\n    }\n    writeValue(currentValue) {\n        this.content = currentValue;\n        const format = getFormat(this.format, this.config.format);\n        if (this.quillEditor) {\n            if (currentValue) {\n                if (format === 'text') {\n                    this.quillEditor.setText(currentValue);\n                }\n                else {\n                    this.quillEditor.setContents(this.valueSetter(this.quillEditor, this.content));\n                }\n                return;\n            }\n            this.quillEditor.setText('');\n        }\n    }\n    setDisabledState(isDisabled = this.disabled) {\n        // store initial value to set appropriate disabled status after ViewInit\n        this.disabled = isDisabled;\n        if (this.quillEditor) {\n            if (isDisabled) {\n                this.quillEditor.disable();\n                this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n            }\n            else {\n                if (!this.readOnly) {\n                    this.quillEditor.enable();\n                }\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n            }\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    validate() {\n        if (!this.quillEditor) {\n            return null;\n        }\n        const err = {};\n        let valid = true;\n        const textLength = this.quillEditor.getText().trim().length;\n        if (this.minLength && textLength && textLength < this.minLength) {\n            err.minLengthError = {\n                given: textLength,\n                minLength: this.minLength\n            };\n            valid = false;\n        }\n        if (this.maxLength && textLength > this.maxLength) {\n            err.maxLengthError = {\n                given: textLength,\n                maxLength: this.maxLength\n            };\n            valid = false;\n        }\n        if (this.required && !textLength) {\n            err.requiredError = {\n                empty: true\n            };\n            valid = false;\n        }\n        return valid ? null : err;\n    }\n};\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], QuillEditorComponent.prototype, \"format\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], QuillEditorComponent.prototype, \"theme\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], QuillEditorComponent.prototype, \"modules\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], QuillEditorComponent.prototype, \"debug\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], QuillEditorComponent.prototype, \"readOnly\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], QuillEditorComponent.prototype, \"placeholder\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], QuillEditorComponent.prototype, \"maxLength\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], QuillEditorComponent.prototype, \"minLength\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], QuillEditorComponent.prototype, \"required\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Array)\n], QuillEditorComponent.prototype, \"formats\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], QuillEditorComponent.prototype, \"customToolbarPosition\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], QuillEditorComponent.prototype, \"sanitize\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], QuillEditorComponent.prototype, \"styles\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], QuillEditorComponent.prototype, \"strict\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], QuillEditorComponent.prototype, \"scrollingContainer\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], QuillEditorComponent.prototype, \"bounds\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Array)\n], QuillEditorComponent.prototype, \"customOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], QuillEditorComponent.prototype, \"trackChanges\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], QuillEditorComponent.prototype, \"preserveWhitespace\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], QuillEditorComponent.prototype, \"classes\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], QuillEditorComponent.prototype, \"onEditorCreated\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], QuillEditorComponent.prototype, \"onEditorChanged\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], QuillEditorComponent.prototype, \"onContentChanged\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], QuillEditorComponent.prototype, \"onSelectionChanged\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], QuillEditorComponent.prototype, \"onFocus\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], QuillEditorComponent.prototype, \"onBlur\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], QuillEditorComponent.prototype, \"valueGetter\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], QuillEditorComponent.prototype, \"valueSetter\", void 0);\nQuillEditorComponent = QuillEditorComponent_1 = __decorate([\n    Component({\n        encapsulation: ViewEncapsulation.None,\n        providers: [\n            {\n                multi: true,\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => QuillEditorComponent_1)\n            },\n            {\n                multi: true,\n                provide: NG_VALIDATORS,\n                useExisting: forwardRef(() => QuillEditorComponent_1)\n            }\n        ],\n        selector: 'quill-editor',\n        template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`\n    }),\n    __param(2, Inject(DOCUMENT)),\n    __param(3, Inject(PLATFORM_ID)),\n    __param(6, Inject(QUILL_CONFIG_TOKEN)),\n    __metadata(\"design:paramtypes\", [ElementRef,\n        DomSanitizer, Object, Object,\n        Renderer2,\n        NgZone, Object])\n], QuillEditorComponent);\n\nlet QuillViewHTMLComponent = class QuillViewHTMLComponent {\n    constructor(sanitizer, config) {\n        this.sanitizer = sanitizer;\n        this.config = config;\n        this.innerHTML = '';\n        this.themeClass = 'ql-snow';\n        this.content = '';\n    }\n    ngOnChanges(changes) {\n        if (changes.theme) {\n            const theme = changes.theme.currentValue || (this.config.theme ? this.config.theme : 'snow');\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        else if (!this.theme) {\n            const theme = this.config.theme ? this.config.theme : 'snow';\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        if (changes.content) {\n            this.innerHTML = this.sanitizer.bypassSecurityTrustHtml(changes.content.currentValue);\n        }\n    }\n};\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], QuillViewHTMLComponent.prototype, \"content\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], QuillViewHTMLComponent.prototype, \"theme\", void 0);\nQuillViewHTMLComponent = __decorate([\n    Component({\n        encapsulation: ViewEncapsulation.None,\n        selector: 'quill-view-html',\n        template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`,\n        styles: [`\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n`]\n    }),\n    __param(1, Inject(QUILL_CONFIG_TOKEN)),\n    __metadata(\"design:paramtypes\", [DomSanitizer, Object])\n], QuillViewHTMLComponent);\n\n// tslint:disable-next-line:variable-name\nlet Quill$1 = null;\nconst getFormat$1 = (format, configFormat) => {\n    const passedFormat = format || configFormat;\n    return passedFormat || 'html';\n};\nconst ɵ0$1 = getFormat$1;\nlet QuillViewComponent = class QuillViewComponent {\n    constructor(\n    // tslint:disable-next-line:ban-types\n    platformId, config, renderer, elementRef) {\n        this.platformId = platformId;\n        this.config = config;\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.strict = true;\n        this.customOptions = [];\n        this.preserveWhitespace = false;\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat$1(this.format, this.config.format);\n            let content = value;\n            if (format === 'html' || format === 'text') {\n                content = quillEditor.clipboard.convert(value);\n            }\n            else if (format === 'json') {\n                try {\n                    content = JSON.parse(value);\n                }\n                catch (e) {\n                    content = [{ insert: value }];\n                }\n            }\n            quillEditor.setContents(content);\n        };\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        if (changes.content) {\n            this.valueSetter(this.quillEditor, changes.content.currentValue);\n        }\n    }\n    ngAfterViewInit() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        if (!Quill$1) {\n            Quill$1 = require('quill');\n        }\n        const modules = Object.assign({}, this.modules || (this.config.modules || defaultModules));\n        modules.toolbar = false;\n        this.customOptions.forEach((customOption) => {\n            const newCustomOption = Quill$1.import(customOption.import);\n            newCustomOption.whitelist = customOption.whitelist;\n            Quill$1.register(newCustomOption, true);\n        });\n        let debug = this.debug;\n        if (!debug && debug !== false && this.config.debug) {\n            debug = this.config.debug;\n        }\n        let formats = this.formats;\n        if (!formats && formats === undefined) {\n            formats = this.config.formats ? Object.assign({}, this.config.formats) : (this.config.formats === null ? null : undefined);\n        }\n        const theme = this.theme || (this.config.theme ? this.config.theme : 'snow');\n        this.elementRef.nativeElement.insertAdjacentHTML('afterbegin', this.preserveWhitespace ? '<pre quill-view-element></pre>' : '<div quill-view-element></div>');\n        this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n        this.quillEditor = new Quill$1(this.editorElem, {\n            debug,\n            formats,\n            modules,\n            readOnly: true,\n            strict: this.strict,\n            theme\n        });\n        this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n        if (this.content) {\n            this.valueSetter(this.quillEditor, this.content);\n        }\n    }\n};\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], QuillViewComponent.prototype, \"format\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], QuillViewComponent.prototype, \"theme\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], QuillViewComponent.prototype, \"modules\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], QuillViewComponent.prototype, \"debug\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Array)\n], QuillViewComponent.prototype, \"formats\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], QuillViewComponent.prototype, \"strict\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], QuillViewComponent.prototype, \"content\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Array)\n], QuillViewComponent.prototype, \"customOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], QuillViewComponent.prototype, \"preserveWhitespace\", void 0);\nQuillViewComponent = __decorate([\n    Component({\n        encapsulation: ViewEncapsulation.None,\n        selector: 'quill-view',\n        template: `\n`,\n        styles: [`\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n`]\n    }),\n    __param(0, Inject(PLATFORM_ID)),\n    __param(1, Inject(QUILL_CONFIG_TOKEN)),\n    __metadata(\"design:paramtypes\", [Object, Object, Renderer2,\n        ElementRef])\n], QuillViewComponent);\n\nvar QuillModule_1;\nlet QuillModule = QuillModule_1 = class QuillModule {\n    static forRoot(config) {\n        return {\n            ngModule: QuillModule_1,\n            providers: [\n                {\n                    provide: QUILL_CONFIG_TOKEN,\n                    // tslint:disable-next-line:only-arrow-functions\n                    useValue: config || { modules: defaultModules }\n                }\n            ]\n        };\n    }\n};\nQuillModule = QuillModule_1 = __decorate([\n    NgModule({\n        declarations: [\n            QuillEditorComponent,\n            QuillViewComponent,\n            QuillViewHTMLComponent\n        ],\n        exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n        imports: [CommonModule],\n        providers: []\n    })\n], QuillModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QUILL_CONFIG_TOKEN, QuillEditorComponent, QuillModule, QuillViewComponent, QuillViewHTMLComponent, defaultModules, ɵ0 };\n//# sourceMappingURL=ngx-quill.js.map\n","module.exports = \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <div class=\\\"cabecalho\\\">\\r\\n            <ion-title>Nova Atividade</ion-title>\\r\\n            <ion-button (click)=\\\"salvar()\\\" [disabled]=\\\"!atividadeForm.valid\\\">\\r\\n                <ion-icon slot=\\\"start\\\" name=\\\"save\\\"></ion-icon>\\r\\n                Salvar\\r\\n            </ion-button>\\r\\n        </div>\\r\\n    </ion-toolbar>\\r\\n    <!-- <ion-toolbar>\\r\\n    </ion-toolbar> -->\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n    <!-- <div class=\\\"cabecalho\\\">\\r\\n        <small>Campos com * são obrigatórios.</small>\\r\\n    </div> -->\\r\\n    <!-- <div class=\\\"forms\\\"> -->\\r\\n    <ion-card>\\r\\n        <ion-card-header>\\r\\n            <ion-card-title>Informações da Atividade</ion-card-title>\\r\\n            <ion-card-subtitle><small>Campos com * são obrigatórios.</small></ion-card-subtitle>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n            <div class=\\\"teste\\\">\\r\\n                <form [formGroup]=\\\"atividadeForm\\\">\\r\\n                    <ion-item>\\r\\n                        <ion-label position=\\\"floating\\\">Título <ion-text color=\\\"danger\\\">*</ion-text>\\r\\n                        </ion-label>\\r\\n                        <ion-input required formControlName=\\\"titulo\\\"></ion-input>\\r\\n                    </ion-item>\\r\\n                    <ion-item>\\r\\n                        <ion-label position=\\\"floating\\\">Autor <ion-text color=\\\"danger\\\">*</ion-text>\\r\\n                        </ion-label>\\r\\n                        <ion-input required formControlName=\\\"autor\\\"></ion-input>\\r\\n                    </ion-item>\\r\\n                    <ion-item>\\r\\n                        <ion-label position=\\\"floating\\\">Descrição</ion-label>\\r\\n                        <ion-textarea rows=\\\"2\\\" formControlName=\\\"descricao\\\"></ion-textarea>\\r\\n                    </ion-item>\\r\\n                </form>\\r\\n                <!-- <ion-item-divider> -->\\r\\n                <ion-list-header>\\r\\n                    <ion-text color=\\\"dark\\\">\\r\\n                        <h1>Texto para Análise <ion-text color=\\\"danger\\\">*</ion-text></h1>\\r\\n                    </ion-text>\\r\\n                </ion-list-header>\\r\\n                <!-- </ion-item-divider> -->\\r\\n                <div id=\\\"editor\\\"></div>\\r\\n                <ion-list-header>\\r\\n                    <ion-text color=\\\"dark\\\">\\r\\n                        <h1>Imagens</h1>\\r\\n                    </ion-text>\\r\\n                </ion-list-header>\\r\\n                <!-- <ion-button (click)=\\\"selecionarImagens()\\\">\\r\\n                    Selecionar Imagens\\r\\n                </ion-button> -->\\r\\n                <input type=\\\"file\\\" src=\\\"\\\" accept=\\\"image/*\\\" multiple=\\\"false\\\" id=\\\"imagePicker\\\" hidden\\r\\n                    (change)=\\\"abreArquivos($event)\\\">\\r\\n                <ion-row>\\r\\n                    <ion-col size=\\\"4\\\">\\r\\n                        <div class=\\\"adicionar-imagem\\\" (click)=\\\"selecionarImagens()\\\">\\r\\n                            <ion-text>\\r\\n                                <h1>\\r\\n                                    <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n                                </h1>\\r\\n                            </ion-text>\\r\\n                            <ion-text color=\\\"dark\\\">\\r\\n                                <p>Selecionar Imagens</p>\\r\\n                            </ion-text>\\r\\n                        </div>\\r\\n                    </ion-col>\\r\\n                    <ng-template ngFor let-img [ngForOf]=\\\"imagens\\\" let-i=\\\"index\\\">\\r\\n                        <ion-col size=\\\"4\\\">\\r\\n                            <div class=\\\"imagens\\\">\\r\\n                                <img [src]=\\\"img.baixa_resolucao\\\" class=\\\"imagem\\\">\\r\\n                                <div class=\\\"remover\\\">\\r\\n                                    <ion-button (click)=\\\"removerImagem(i)\\\" color=\\\"light\\\">\\r\\n                                        <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\" color=\\\"danger\\\"></ion-icon>\\r\\n                                    </ion-button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </ion-col>\\r\\n                    </ng-template>\\r\\n                </ion-row>\\r\\n            </div>\\r\\n        </ion-card-content>\\r\\n    </ion-card>\\r\\n    <!-- <quill-editor id=\\\"editor\\\"></quill-editor> -->\\r\\n    <!-- </div> -->\\r\\n    <!-- <ion-slides pager=\\\"true\\\">\\r\\n        <ng-template ngFor let-img [ngForOf]=\\\"imagens\\\" let-i=\\\"index\\\">\\r\\n            <ion-slide>\\r\\n                <div class=\\\"imagens\\\">\\r\\n                    <img [src]=\\\"img.baixa_resolucao\\\" class=\\\"imagem\\\">\\r\\n                    <div class=\\\"remover\\\">\\r\\n                        <ion-button (click)=\\\"removerImagem(i)\\\">\\r\\n                            <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\" color=\\\"danger\\\"></ion-icon>\\r\\n                        </ion-button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </ion-slide>\\r\\n        </ng-template>\\r\\n    </ion-slides> -->\\r\\n</ion-content>\"","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NovaAtividadePage } from './nova-atividade.page';\r\nimport { QuillModule } from 'ngx-quill';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NovaAtividadePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    QuillModule.forRoot(),\r\n  ],\r\n  declarations: [NovaAtividadePage],\r\n  schemas: [\r\n      CUSTOM_ELEMENTS_SCHEMA\r\n  ]\r\n})\r\nexport class NovaAtividadePageModule {}\r\n","module.exports = \".cabecalho {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: end;\\n          justify-content: flex-end;\\n  padding-right: 15px;\\n}\\n\\n.formulario {\\n  padding: 10px 20px 0;\\n  margin-left: 30px;\\n}\\n\\n.imagens {\\n  position: relative;\\n  z-index: 1;\\n  height: 100%;\\n}\\n\\n.imagens .imagem {\\n  z-index: 2;\\n}\\n\\n.imagens .remover {\\n  position: relative;\\n  top: -25px;\\n  z-index: 3;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: end;\\n          justify-content: flex-end;\\n  padding-right: 25px;\\n}\\n\\n#editor {\\n  height: 320px;\\n}\\n\\n.adicionar-imagem {\\n  width: 100%;\\n  border: 2px solid grey;\\n  border-radius: 5px;\\n  padding: 50px 0;\\n}\\n\\n.adicionar-imagem ion-text {\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  display: -webkit-box;\\n  display: flex;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYXRpdmlkYWRlcy9ub3ZhLWF0aXZpZGFkZS9DOlxcVXNlcnNcXFVzZXJcXERvY3VtZW50c1xcWXVyaVxcbGl2cm8tdmlzdWFsLUFQUC9zcmNcXGFwcFxccGFnZXNcXGF0aXZpZGFkZXNcXG5vdmEtYXRpdmlkYWRlXFxub3ZhLWF0aXZpZGFkZS5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2F0aXZpZGFkZXMvbm92YS1hdGl2aWRhZGUvbm92YS1hdGl2aWRhZGUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksb0JBQUE7RUFBQSxhQUFBO0VBQ0EscUJBQUE7VUFBQSx5QkFBQTtFQUNBLG1CQUFBO0FDQ0o7O0FERUE7RUFDSSxvQkFBQTtFQUNBLGlCQUFBO0FDQ0o7O0FERUE7RUFHSSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxZQUFBO0FDREo7O0FERUk7RUFDSSxVQUFBO0FDQVI7O0FERUk7RUFDSSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxVQUFBO0VBQ0Esb0JBQUE7RUFBQSxhQUFBO0VBQ0EscUJBQUE7VUFBQSx5QkFBQTtFQUNBLG1CQUFBO0FDQVI7O0FESUE7RUFDSSxhQUFBO0FDREo7O0FESUE7RUFDSSxXQUFBO0VBRUEsc0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7QUNGSjs7QURHSTtFQUNJLHdCQUFBO1VBQUEsdUJBQUE7RUFDQSxvQkFBQTtFQUFBLGFBQUE7QUNEUiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F0aXZpZGFkZXMvbm92YS1hdGl2aWRhZGUvbm92YS1hdGl2aWRhZGUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhYmVjYWxob3sgICAgXHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XHJcbn1cclxuXHJcbi5mb3JtdWxhcmlve1xyXG4gICAgcGFkZGluZzogMTBweCAyMHB4IDA7XHJcbiAgICBtYXJnaW4tbGVmdDogMzBweDtcclxufVxyXG5cclxuLmltYWdlbnN7XHJcbiAgICAvLyBkaXNwbGF5OiBmbGV4O1xyXG4gICAgLy8gZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgXHJcbiAgICB6LWluZGV4OiAxO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgLmltYWdlbXtcclxuICAgICAgICB6LWluZGV4OiAyO1xyXG4gICAgfVxyXG4gICAgLnJlbW92ZXJ7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHRvcDogLTI1cHg7XHJcbiAgICAgICAgei1pbmRleDogMztcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogMjVweDtcclxuICAgIH1cclxuXHJcbn1cclxuI2VkaXRvcntcclxuICAgIGhlaWdodDogMzIwcHg7XHJcbn1cclxuXHJcbi5hZGljaW9uYXItaW1hZ2Vte1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICAvLyBoZWlnaHQ6IDEwMCU7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCBncmV5O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgcGFkZGluZzogNTBweCAwO1xyXG4gICAgaW9uLXRleHR7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgIH1cclxufSIsIi5jYWJlY2FsaG8ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xufVxuXG4uZm9ybXVsYXJpbyB7XG4gIHBhZGRpbmc6IDEwcHggMjBweCAwO1xuICBtYXJnaW4tbGVmdDogMzBweDtcbn1cblxuLmltYWdlbnMge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDE7XG4gIGhlaWdodDogMTAwJTtcbn1cbi5pbWFnZW5zIC5pbWFnZW0ge1xuICB6LWluZGV4OiAyO1xufVxuLmltYWdlbnMgLnJlbW92ZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogLTI1cHg7XG4gIHotaW5kZXg6IDM7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIHBhZGRpbmctcmlnaHQ6IDI1cHg7XG59XG5cbiNlZGl0b3Ige1xuICBoZWlnaHQ6IDMyMHB4O1xufVxuXG4uYWRpY2lvbmFyLWltYWdlbSB7XG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXI6IDJweCBzb2xpZCBncmV5O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHBhZGRpbmc6IDUwcHggMDtcbn1cbi5hZGljaW9uYXItaW1hZ2VtIGlvbi10ZXh0IHtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGRpc3BsYXk6IGZsZXg7XG59Il19 */\"","import { BancoService } from './../../../services/banco.service';\r\nimport { QuillModule, QuillEditorComponent } from 'ngx-quill';\r\nimport { Platform, AlertController, LoadingController, ToastController } from '@ionic/angular';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport * as Quill from 'quill'\r\n// import { Quill } from 'quill'\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators'\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-nova-atividade',\r\n    templateUrl: './nova-atividade.page.html',\r\n    styleUrls: ['./nova-atividade.page.scss'],\r\n})\r\nexport class NovaAtividadePage implements OnInit {\r\n    // @ViewChild('editor', {\r\n    //     static: true\r\n    // }) editor: QuillEditorComponent\r\n\r\n    public atividadeForm: FormGroup\r\n    public imagens = []\r\n    public editor\r\n    private usuario\r\n    constructor(\r\n        public formBuilder: FormBuilder,\r\n        public platform: Platform,\r\n        public alertCtrl: AlertController,\r\n        public loadingCtrl: LoadingController,\r\n        public toastCtrl: ToastController,\r\n        public router: Router,\r\n        public banco: BancoService,\r\n        private api: ApiService\r\n    ) {\r\n        this.atividadeForm = formBuilder.group({\r\n            titulo: ['', Validators.compose([Validators.required, Validators.minLength(10)])],\r\n            autor: ['', Validators.compose([Validators.required, Validators.minLength(6)])],\r\n            descricao: ['']\r\n        })\r\n        // q('a')\r\n        // console.log(\"editor: \", editor);\r\n        // var editor = new Quill('#editor', {\r\n        //     modules: { toolbar: '#toolbar' },\r\n        //     theme: 'snow'\r\n        // });\r\n\r\n    }\r\n\r\n    async ngOnInit() {\r\n        let toolbarOptions = [\r\n            [{ 'font': [] }],\r\n            ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n\r\n            [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n\r\n            [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n            [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\r\n            [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\r\n          \r\n            [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n          \r\n            [{ 'align': [] }],\r\n          \r\n            ['clean']  \r\n        ]\r\n        this.editor = new Quill('#editor', {\r\n            theme: 'snow', modules: {\r\n                toolbar: toolbarOptions\r\n            }\r\n        })\r\n\r\n        this.usuario = await this.banco.get('user-credentials')\r\n        console.log(\"usuario: \", this.usuario);\r\n        \r\n        // this.editor\r\n        //     .onContentChanged\r\n        //     .pipe(\r\n        //         debounceTime(400),\r\n        //         distinctUntilChanged()\r\n        //     )\r\n        //     .subscribe((data) => {\r\n        //         // tslint:disable-next-line:no-console\r\n        //         console.log('view child + directly subscription', data)\r\n        //     })\r\n    }\r\n\r\n    selecionarImagens() {\r\n        if (this.platform.is('capacitor')) {\r\n            this.abreImagemCapacitor()\r\n        } else {\r\n            var target = document.getElementById('imagePicker')\r\n            target.click()\r\n        }\r\n    }\r\n\r\n    abreImagemCapacitor() { }\r\n\r\n    abreArquivo(e) {\r\n        var file = e.target.files[0];\r\n        if (!file) { return; }\r\n        var reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            var image = new Image();\r\n        }\r\n    }\r\n\r\n    abreArquivos(e) {\r\n        var files = e.target.files;\r\n        if (!files.length) { return; }\r\n        for (let file of files) {\r\n            console.log(\"imagem\");\r\n\r\n            var reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                // this.imagemDestaque = e.target['result'];\r\n                // console.log('this.imagemDestaque: ', this.imagemDestaque);\r\n\r\n                var image: any = new Image();\r\n                image.src = e.target['result'];\r\n                image.onload = async () => {\r\n                    let imageReturn = await this.comprimir(e.target['result'])\r\n                    let imagem = {\r\n                        baixa_resolucao: imageReturn\r\n                    }\r\n                    console.log(\"imagem: \", imagem);\r\n\r\n                    this.imagens.push(imagem)\r\n                }\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    comprimir(img?) {\r\n        return new Promise<any>(done => {\r\n            let imagemOtimizada = null;\r\n            var image = new Image();\r\n            image.src = img\r\n\r\n            image.onload = () => {\r\n                var canvas = document.createElement('canvas'),\r\n                    ctx = canvas.getContext('2d');\r\n                canvas.width = image.naturalWidth;\r\n                canvas.height = image.naturalHeight;\r\n\r\n                if (canvas.width > 1080 && canvas.width > canvas.height) {\r\n                    console.log('width bigger:', canvas.width, canvas.height);\r\n\r\n                    let proporcao = (((1080 * 100) / canvas.width)) / 100;\r\n                    canvas.width = Math.round(image.naturalWidth * proporcao);\r\n                    canvas.height = Math.round(image.naturalHeight * proporcao);\r\n\r\n                } else if (canvas.height > 1080 && canvas.height > canvas.width) {\r\n                    console.log('height bigger:', canvas.height, canvas.width);\r\n                    let proporcao = (((1080 * 100) / canvas.height)) / 100;\r\n                    canvas.height = Math.round(image.naturalHeight * proporcao);\r\n                    canvas.width = Math.round(image.naturalWidth * proporcao);\r\n                }\r\n\r\n                console.log('width/height:', canvas.width, canvas.height);\r\n                ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n                imagemOtimizada = canvas.toDataURL(\"image/jpeg\", 0.3);\r\n                done(imagemOtimizada);\r\n            };\r\n        });\r\n    }\r\n\r\n    async removerImagem(index) {\r\n        let alert = await this.alertCtrl.create({\r\n            subHeader: \"Deseja remover esta imagem?\", buttons: [{\r\n                text: \"Não\"\r\n            }, {\r\n                text: \"Sim\",\r\n                handler: () => {\r\n                    this.imagens.splice(index, 1);\r\n                    console.log('imagens', this.imagens);\r\n                }\r\n            }]\r\n        })\r\n        alert.present()\r\n    }\r\n\r\n    changedEditor(e) {\r\n        // console.log(\"changed\", e);\r\n        // console.log(\"texto\", e.content());\r\n\r\n    }\r\n\r\n    async salvar() {\r\n        // console.log(JSON.stringify(this.editor.getContents()));\r\n        // return;\r\n        let loading = await this.loadingCtrl.create({ message: \"Salvando...\" })\r\n        loading.present()\r\n        let body = `\r\n            mutation {\r\n                novaAtividade(\r\n                    id_usuario: ${this.usuario['id']}\r\n                    titulo: \"${this.atividadeForm.value.titulo}\",\r\n                    autor: \"${this.atividadeForm.value.autor}\",\r\n                    descricao: \"${this.atividadeForm.value.descricao}\",\r\n                    texto: ${JSON.stringify(JSON.stringify(this.editor.getContents()))},\r\n                    imagens: ${JSON.stringify(this.imagens).replace(/\\\"baixa_resolucao\\\"/g, 'baixa_resolucao')}\r\n                ){\r\n                    id\r\n                }\r\n            }\r\n        `\r\n        let retorno = await this.api.post({ query: body });\r\n        loading.dismiss()\r\n\r\n        if (retorno.data && !retorno.errors) {\r\n            let toast = await this.toastCtrl.create({ message: \"Cadastro realizado com sucesso\", duration: 3000 })\r\n            toast.present()\r\n            this.router.navigate(['/atividades/minhas-atividades'])\r\n        } else {\r\n            let alerta = await this.alertCtrl.create({ header: \"Ocorreu um erro\", message: \"Tente novamente, ou contate o suporte.\" })\r\n            alerta.present()\r\n        }\r\n    }\r\n\r\n}\r\n"],"sourceRoot":""}